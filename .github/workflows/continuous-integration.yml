name: Continuous Integration Build üèóÔ∏è and Test üß™

on:
    pull_request:
        branches:
            - main
            - develop
    push:
        branches:
            - main
            - develop

jobs:
    compile:
        name: Compile üèóÔ∏è
        strategy:
            matrix:
                os: [ ubuntu-latest ]
        runs-on: ${{ matrix.os }}
        steps:
            -   uses: docker-practice/actions-setup-docker@master
                timeout-minutes: 12
            -   uses: actions/checkout@v3
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: Setup Gradle
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: clean classes testClasses testIntegrationClasses
    test:
        name: Test üß™
        needs: compile
        strategy:
            matrix:
                os: [ ubuntu-latest ]
        runs-on: ${{ matrix.os }}

        steps:
            -   uses: docker-practice/actions-setup-docker@master
                timeout-minutes: 12
            -   uses: actions/checkout@v3
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: Run tests üß™
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: clean check sonar aggregateReports
                env:
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: Generate JaCoCo Badge
                uses: cicirello/jacoco-badge-generator@v2
                with:
                    generate-branches-badge: true
                    jacoco-csv-file: build/reports/jacoco/codeCoverageReport/codeCoverageReport.csv

            -   name: Log coverage percentage
                run: |
                    echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
                    echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

            -   name: Commit and push the badge (if it changed)
                uses: EndBug/add-and-commit@v9
                with:
                    default_author: github_actions
                    message: 'commit badge'
                    add: '*.svg'
            -   name: Upload documentation results
                uses: actions/upload-artifact@v2
                with:
                    name: documentation
                    path: build/documentation
    security:
        name: Security Checks üîí
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: Run security checks üîí
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: clean dependencyCheckAnalyze
            -   name: Upload security results
                uses: actions/upload-artifact@v2
                with:
                    name: owasp-reports
                    path: build/reports/owasp
    release:
        name: Release üöÄ
        needs: [ tests, security ]
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: Run build with Gradle wrapper
                id: gradle
                run: ./gradlew build --scan
            -   name: "Add build scan URL as PR comment"
                uses: actions/github-script@v5
                if: github.event_name == 'pull_request' && failure()
                with:
                    github-token: ${{secrets.GITHUB_TOKEN}}
                    script: |
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: '‚ùå ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
                        })
            -   name: Setup Node.js
                uses: actions/setup-node@v2
                with:
                    node-version: '18'
            -   name: Add plugin for conventional commits
                run: npm install conventional-changelog-conventionalcommits @semantic-release/exec
                working-directory: ./.github/workflows
            -   name: Release to GitHub
                working-directory: ./.github/workflows
                run: npx semantic-release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            revnumber: ${{ env.revnumber }}
    build-publish-docker:
        name: Build and Publish Docker üê≥
        needs: [ release ]
        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   run: echo ${{ needs.release.outputs.revnumber }}
    publish-docs:
        name: Publish Docs üìö
        needs: [ release ]
        runs-on: ubuntu-latest

        steps:
            -   uses: actions/checkout@v3
                with:
                    fetch-depth: 0
            -   name: Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: Download documentation reports
                uses: actions/download-artifact@v2
                with:
                    name: documentation
                    path: build/documentation
            -   name: Download owasp reports
                uses: actions/download-artifact@v2
                with:
                    name: owasp-reports
                    path: build/reports/owasp
            -   name: Build package with Gradle wrapper
                uses: gradle/gradle-build-action@v2
                with:
                    arguments: aggregateDocumentation
                env:
                    revnumber: ${{ needs.release.outputs.revnumber }}
            -   name: Publish documentation
                uses: JamesIves/github-pages-deploy-action@v4.2.3
                with:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    BRANCH: gh-pages
                    FOLDER: build/documentation
                    CLEAN: true
