name: CI Build

on:
    pull_request:
        branches:
            - main
            - develop
    push:
        branches:
            - main
            - develop

jobs:
    compile:
        name: 🏗️ Compile
        strategy:
            matrix:
                os: [ ubuntu-latest ]
        runs-on: ${{ matrix.os }}
        steps:
            -   name: 🐳 Set up Docker
                uses: docker-practice/actions-setup-docker@master
                timeout-minutes: 12
            -   name: 👍 Checkout
                uses: actions/checkout@v4
            -   name: ☕ Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: 🧪 Run Check and Sonar
                id: gradle
                run: ./gradlew clean classes testClasses testIntegrationClasses assembleFrontend
    tests:
        name: 🧪 Tests
        needs: compile
        strategy:
            matrix:
                os: [ ubuntu-latest ]
                shard: [1/4, 2/4, 3/4, 4/4]
        runs-on: ${{ matrix.os }}

        steps:
            -   name: 🐳 Set up Docker
                uses: docker-practice/actions-setup-docker@master
                timeout-minutes: 12
            -   name: 👍 Checkout
                uses: actions/checkout@v4
                with:
                    repository: ${{ github.event.pull_request.head.repo.full_name }}
                    ref: ${{ github.event.pull_request.head.ref }}
            -   uses: actions/setup-node@v3
                with:
                    node-version: 18
            -   name: 🧪💠 Install Playwright Browsers
                run: npx playwright install --with-deps
            -   name: ☕ Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: 🧪 Run Check and Sonar
                id: gradle
                run: ./gradlew clean assembleFrontend check sonar jacocoTestReport aggregateReports
                env:
                    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            -   name: 💫 Generate JaCoCo Badge
                uses: cicirello/jacoco-badge-generator@v2
                with:
                    generate-branches-badge: true
                    jacoco-csv-file: apps/mindsync/build/reports/jacoco/test/jacocoTestReport.csv

            -   name: 📄 Log coverage percentage
                run: |
                    echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
                    echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

            -   name: ❇️ Commit and push the badge (if it changed)
                if: github.ref == 'refs/heads/master'
                uses: EndBug/add-and-commit@v9
                with:
                    default_author: github_actions
                    message: 'commit badge 🍀 ${{ steps.jacoco.outputs.coverage }} %'
                    github_token: ${{ secrets.GITHUB_TOKEN }}
            -   name: 🧩 Upload documentation results
                uses: actions/upload-artifact@v3
                with:
                    name: documentation
                    path: build/documentation
            -   name: 🧩 ◌ Upload blob report to GitHub Actions Artifacts
                if: always()
                uses: actions/upload-artifact@v3
                with:
                    name: all-blob-reports
                    path: apps/mindsync-frontend/**/blob-report
                    retention-days: 1
    merge-reports:
        # Merge reports after playwright-tests, even if some shards have failed
        if: always()
        needs: [ tests ]

        runs-on: ubuntu-latest
        steps:
            -   uses: actions/checkout@v3
            -   uses: actions/setup-node@v3
                with:
                    node-version: 18
            -   name: 🫧 Install dependencies
                run: npm ci

            -   name: ⇩ Download blob reports from GitHub Actions Artifacts
                uses: actions/download-artifact@v3
                with:
                    name: all-blob-reports
                    path: all-blob-reports

            -   name: ⋈ Merge into HTML Report
                run: npx playwright merge-reports --reporter html ./all-blob-reports

            -   name: 🧩 ◌ Upload HTML report to GitHub Actions Artifacts
                uses: actions/upload-artifact@v3
                with:
                    name: html-report--attempt-${{ github.run_attempt }}
                    path: playwright-report
                    retention-days: 14
    security:
        name: 🔒Security Checks
        runs-on: ubuntu-latest
        steps:
            -   name: 👍 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: ☕ Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: 🔒 Run security checks with 🧰 OWASP Dependency Check
                id: gradle
                run: ./gradlew clean dependencyCheckAnalyze
            -   name: 🧩Upload security results
                uses: actions/upload-artifact@v3
                with:
                    name: owasp-reports
                    path: build/reports/owasp
    release:
        name: 🚀 Release
        needs: [ tests, security ]
        if: github.ref == 'refs/heads/main'
        runs-on: ubuntu-latest
        steps:
            -   name: 👍 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: ☕ Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: 🛠️ Run build with Gradle wrapper
                id: gradle
                run: ./gradlew build --scan
            -   name: Add build scan URL as PR comment
                uses: actions/github-script@v6
                if: github.event_name == 'pull_request' && failure()
                with:
                    github-token: ${{secrets.GITHUB_TOKEN}}
                    script: |
                        github.rest.issues.createComment({
                          issue_number: context.issue.number,
                          owner: context.repo.owner,
                          repo: context.repo.repo,
                          body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
                        })
            -   name: ❇️ Setup Node.js
                uses: actions/setup-node@v3
                with:
                    node-version: "lts/*"
                    cache: "npm"
            -   name: 🪄 Add plugin for conventional commits
                run: npm install conventional-changelog-conventionalcommits @semantic-release/exec
                working-directory: ./.github/workflows
            -   name: 📦 Release to GitHub
                working-directory: ./.github/workflows
                run: npx semantic-release
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        outputs:
            revnumber: ${{ env.revnumber }}
    build-publish-docker:
        name:  🐳 Build and Publish Docker Image
        needs: [ release ]
        runs-on: ubuntu-latest
        steps:
            -   name: 👍 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: 🎯 Update Version in gradle.properties
                run: |
                    sed -i "s/version=.*/version=${{ needs.release.outputs.revnumber }}/" gradle.properties
            -   name: ☕ Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   run: echo ${{ needs.release.outputs.revnumber }}
            -   name: 🛠️ Run build with Gradle wrapper
                id: gradle
                run: ./gradlew clean bootBuildImage
            -   name: 🐋Publish to Docker Hub
                uses: docker/build-push-action@v5
                with:
                    username: ${{ secrets.DOCKER_HUB_USERNAME }}
                    password: ${{ secrets.DOCKER_HUB_PASSWORD }}
                    repository: n4t5u/mindsync
                    tags: ${{ needs.release.outputs.revnumber }}
    publish-docs:
        name: 📚Publish Docs to GitHub Pages
        needs: [ release ]
        runs-on: ubuntu-latest

        steps:
            -   name: 👍 Checkout
                uses: actions/checkout@v4
                with:
                    fetch-depth: 0
            -   name: ☕ Set up JDK 17
                uses: actions/setup-java@v3
                with:
                    distribution: corretto
                    java-version: 17
            -   name: ⬇️ Download documentation reports
                uses: actions/download-artifact@v3
                with:
                    name: documentation
                    path: build/documentation
            -   name: ⬇️ Download OWASP reports
                uses: actions/download-artifact@v3
                with:
                    name: owasp-reports
                    path: build/reports/owasp
            -   name: 🛠️ Build package with Gradle wrapper
                id: gradle
                run: ./gradlew aggregateDocumentation
                env:
                    revnumber: ${{ needs.release.outputs.revnumber }}
            -   name: ↗️Publish documentation
                uses: JamesIves/github-pages-deploy-action@v4.4.3
                with:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    BRANCH: gh-pages
                    FOLDER: build/documentation
                    CLEAN: true
